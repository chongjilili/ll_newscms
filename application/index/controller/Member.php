<?php
/**
 * Created by PhpStorm.
 * User: lili
 * Date: 2018/1/11
 * Time: 13:24
 */

namespace app\index\controller;


use app\admin\model\Apply;
use app\admin\model\Article;
use app\admin\model\Category;
use app\admin\model\User;
use app\admin\model\Usertype;
use think\Controller;
use think\Db;

class Member extends Controller
{



    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if (session('slogin') !== true || session('ll_susername') == null ){
            //没有登陆
            $this->redirect('login/login');
        }
    }


    protected $beforeActionList = [
        'type'  ,
        'l1'=>['only'=>'index'],
        'l2'=>['only'=>'apply'],
        'l3'=>['only'=>'addnews'],
        'l4'=>['only'=>'newslist,editnews'],
        'l5'=>['only'=>'notice'],


    ];

    protected function type()
    {

        $usermodel = new  User();
        $umsg = $usermodel->getUserByuid(session('ll_suid'));//获得登录用户的信息
        $ll_type = $umsg['ll_type'];
        $this->assign('ll_type',$ll_type);

    }

    protected function l1()
    {
        $this->assign('l',1);

    }
    protected function l2()
    {
        $this->assign('l',2);


    }
    protected function l3()
    {
        $this->assign('l',3);


    }
    protected function l4()
    {
        $this->assign('l',4);


    }
    protected function l5()
    {
        $this->assign('l',5);


    }






    
    /*个人资料页面*/
    public function index(){

        $usermodel = new  User();
        $umsg = $usermodel->getUserByuid(session('ll_suid'));//获得登录用户的信息
        
        $this->assign('umsg',$umsg);
        return $this->fetch();
    }


    /*
     * 修改
     *
     * */
    public function modify(){
        $send = input();
//        dump($send);
        if (!empty($send['ll_password'])){
            if ($send['ll_password'] == $send['qpassword']){
                $send['ll_password'] = md5($send['ll_password']);

                unset($send['qpassword']);
                
            }else{
                $this->error('新密码和确认密码不正确！');

            }
        }else{
            unset($send['ll_password']);
            unset($send['qpassword']);

        }



        Db::startTrans();
        try{
             
            Db::name('user')->where('ll_uid',$send['ll_uid'])->update($send);//新闻的表的更新

            // 提交事务
            Db::commit();

        } catch (\Exception $e) {
            // 回滚事务
//            dump($e);
            $this->error('填写的信息错误，请检查！');
            Db::rollback();
        }

        $this->success('修改成功');
    }



    /*
     * 申请页面
     * */
    public function apply(){

        $usermodel = new  User();
        $umsg = $usermodel->getUserByuid(session('ll_suid'));//获得登录用户的信息
        $utmodel = new  Usertype();
        $utlist = $utmodel->getUsertypelist();


        $this->assign('umsg',$umsg);
        $this->assign('utlist',$utlist);
        return $this->fetch();

    }

    /*
     * 申请操作
     *
     * */
    public function doapply(){
        $send = input();
        $send['ll_pass'] = 2;
        $send['ll_aptime'] = time();

        if (Db::name('apply')->insertGetId($send) > 0){
            $this->success('提交申请成功');
        }else{
            $this->error('提交失败');
        }

    }
    
    
    /*
     * 
     * 通知页面
     * 
     * */
    public function notice(){
        
        $applymodel = new Apply();
        $applylist = $applymodel->getapplyByUid(session('ll_suid'));
        
        $this->assign('applylist',$applylist);
        return $this->fetch();
    }




    /*
     *
     * 新闻编写
     *
     * */

    public function addnews(){

        $catmodel = new  Category();
        $categorys = $catmodel->getAllCategory();//获得所有的分类，树状的结构
//        dump($categorys);
        $catnottree = $catmodel->getCatNotTree($categorys);

        $this->assign('catnottree',$catnottree);

        return $this->fetch();

    }


    /*
     * 添加操作
     *
     * */
    public function doadd(){
        $send = input();
//        var_dump($send);
        /*
 array(5) {
  ["ll_title"]=>
  string(9) "急急急"
  ["ll_cid"]=>
  string(1) "4"
  ["ll_uid"]=>
  string(1) "1"
  ["ll_state"]=>
  string(2) "on"
  ["ll_content"]=>
  string(15) "防守打法是"
}
         *
         * */
        $send['ll_state'] = empty($send['ll_state'])||$send['ll_state']!='on' ? 2 :1;
        $send['ll_time'] = strtotime('now') ;
        unset($send['file']);

        Db::startTrans();
        try{
            Db::name('article')->insert($send);//新闻的表的更新
            // 提交事务
            Db::commit();
        } catch (\Exception $e) {
            // 回滚事务

            $this->error('填写的信息错误，请检查！');
            Db::rollback();
        }

        $this->success('增加成功','member/newslist');

    }



    /*
     * 新闻列表
     *
     * */
    public function newslist(){
        $list = Db::name('article')->where('ll_uid',session('ll_suid'))->paginate(1);
        // 把分页数据赋值给模板变量list
        $page = $list->render();
// 模板变量赋值
      
        $this->assign('list', $list);
        $this->assign('page', $page);
        return $this->fetch();
    }


    /*
     * 上传
     *
     * */
    public function upload(){

//        dump($_FILES);
        // 获取表单上传文件 例如上传了001.jpg
        $file = request()->file('file');

        // 移动到框架应用根目录/public/uploads/ 目录下
        if($file){
            $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads');
            if($info){
                // 成功上传后 获取上传信息
                // 输出 jpg
//                echo $info->getExtension();
                // 输出 20160820/42a79759f284b767dfcb2a0197904287.jpg
//                echo $info->getSaveName();
                // 输出 42a79759f284b767dfcb2a0197904287.jpg
//                echo $info->getFilename();
                $imgname = $info->getSaveName();
                $imgname = str_replace('\\','/' ,$imgname );
//                dump($imgname);
                $upjson = '{"code": 0,"msg": "","data": { "src":"'.$imgname.'"}}';
                /* $articlemodel = new  Article();
                 $articlemodel->saveupload($aid, $imgname);//存进数据库*/
                echo $upjson;




            }else{
                // 上传失败获取错误信息
                echo $file->getError();
            }
        }

    }


    public function editnews(){


        $catmodel = new  Category();
        $categorys = $catmodel->getAllCategory();//获得所有的分类，树状的结构
//        dump($categorys);
        $catnottree = $catmodel->getCatNotTree($categorys);


        $send = input();
//        dump(strtotime('now'));
        $aid = $send['ll_aid'];
        $articlemodel = new Article();
        $newsdetail = $articlemodel->getNewsDetailByAid($aid);//获得详细资料
        $this->assign('nd',$newsdetail);

        $this->assign('catnottree',$catnottree);


        return $this->fetch();
    }



    /*
     * 修改新闻操作
     *
     *
     * */
    public function doeditnews(){
        $send = input();
        $cid = $send['ll_cid'];
        $uid = $send['ll_uid'];
//        $send['ll_state'] = empty($send['ll_state'])||$send['ll_state']!='on' ? 2 :1;
//        $send['ll_time'] = strtotime($send['ll_time']) ;
//        dump($send);
        unset($send['file']);
        Db::startTrans();
        try{

            Db::name('article')->where('ll_aid',$send['ll_aid'])->update($send);//新闻的表的更新

            // 提交事务
            Db::commit();

        } catch (\Exception $e) {
            // 回滚事务
//            dump($e);
            $this->error('填写的信息错误，请检查！');
            Db::rollback();
        }

        $this->success('修改成功');

    }



    /*
     * 删除新闻
     *
     * */
    public function deletenews(){
        $send=input();
        $aid = $send['ll_aid'];
        Db::startTrans();
        try{
            if (Db::name('article')->delete($aid)<=0){//删除数据
                $this->error('删除失败');
            }
            // 提交事务
            Db::commit();
        } catch (\Exception $e) {
            // 回滚事务

            $this->error('删除失败');
            Db::rollback();
        }

        $this->success('删除成功');

    }



    /*
     * 点赞
     *
     * */
    public function getgood(){
        $send=input();

//        dump(Db::name('collect')->where($send)->count());

       

         if (Db::name('collect')->where($send)->count()<=0){
                Db::name('collect')->insertGetId($send);//点赞
                $this->success('点赞成功');

            }else{
                Db::name('collect')->where($send)->delete();//取消点赞
                $this->success('去赞成功');

            }
            // 提交事务
            Db::commit();

//        $this->success('删除成功');

    }







    
    
}